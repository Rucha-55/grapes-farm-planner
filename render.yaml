# Render Blueprint for Grapes Farm Planner
# Reference: https://render.com/docs/blueprint-spec

services:
  - type: web
    name: grapes-farm-planner
    env: docker
    dockerfilePath: ./Dockerfile
    
    # Environment variables
    envVars:
      # Application Settings
      - key: FLASK_APP
        value: app.py
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true
      - key: PORT
        value: 10000
      - key: PYTHONUNBUFFERED
        value: 1
      - key: PYTHONPATH
        value: /app
        
      # TensorFlow Settings
      - key: TF_CPP_MIN_LOG_LEVEL
        value: "3"
      - key: TF_ENABLE_ONEDNN_OPTS
        value: "0"
        
      # File Upload Settings
      - key: UPLOAD_FOLDER
        value: /app/uploads
      - key: MAX_CONTENT_LENGTH
        value: "16777216"  # 16MB
        
      # Database Configuration (to be set in Render dashboard)
      - key: MONGO_URI
        sync: false  # Will be set in dashboard
        
      # API Keys (to be set in Render dashboard)
      - key: WEATHER_API_KEY
        sync: false  # Will be set in dashboard
      - key: GEMINI_API_KEY
        sync: false  # Will be set in dashboard
    
    # Build and deployment settings
    buildCommand: ./render-build.sh
    dockerCommand: gunicorn --config gunicorn_config.py app:app
    dockerContext: .
    
    # Resource allocation (adjust based on your needs)
    plan: free  # Can be upgraded to 'standard' for production
    region: oregon  # Choose the region closest to your users
    
    # Health check
    healthCheckPath: /health
    
    # Auto-deploy from Git
    autoDeploy: true
    
    # Build settings
    build:
      useDockerfile: true
      dockerfilePath: Dockerfile
      dockerBuildTarget: production
      
    # Environment variables that should be set in the Render dashboard
    # These are just placeholders - actual values should be set in the dashboard
    envVarsFrom:
      - envVar: MONGO_URI
        description: "MongoDB connection string"
        required: true
      - envVar: SECRET_KEY
        description: "Flask secret key"
        generateOnDeploy: true
      - envVar: WEATHER_API_KEY
        description: "OpenWeatherMap API key"
        required: true
      - envVar: GEMINI_API_KEY
        description: "Google Gemini API key"
        required: true
    
    # Persistent storage for uploads (if needed)
    # volumes:
    #   - name: uploads
    #     mountPath: /app/uploads
    #     sizeGB: 1  # Adjust size as needed
